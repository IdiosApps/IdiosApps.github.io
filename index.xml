<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>James' Digital Garden</title><link>https://idiosapps.github.io/</link><description>Recent content on James' Digital Garden</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>James Clark ©</copyright><lastBuildDate>Sun, 18 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://idiosapps.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Indian Jones &amp; the font of accessibility</title><status>seeding</status><link>https://idiosapps.github.io/garden/font-of-accessibility/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://idiosapps.github.io/garden/font-of-accessibility/</guid><description>&lt;p>// DEMONSTRATE font A vs B legibility (extreme case: windings? VS hyperlegible)
// bit about hyperlegible&lt;/p>
&lt;p>// IMAGE of indian jones faces melting &amp;ldquo;when some people see comic sans used unironically&amp;rdquo;&lt;/p>
&lt;p>// QUOTE? Simon Peython Jones - major contributor to the Haskell programming language, outreach&lt;/p>
&lt;p>comic sans - which variants, and where you can use them. short section for each, with references
0. this website&lt;/p>
&lt;ol>
&lt;li>desktop browser&lt;/li>
&lt;li>samsung phone&lt;/li>
&lt;li>kindle (easier reading/smaller font/different vibe)&lt;/li>
&lt;li>IDE code&lt;/li>
&lt;li>terminal&lt;/li>
&lt;/ol>
&lt;p>// Reference back to clickbait summary&lt;/p>
&lt;p>// CTA - try out some new fonts in new places&lt;/p></description></item><item><title>How to always know when there are PRs to check out 🔮</title><status>seeding</status><link>https://idiosapps.github.io/garden/github-pr-watcher/</link><pubDate>Fri, 05 Aug 2022 00:00:00 +0000</pubDate><guid>https://idiosapps.github.io/garden/github-pr-watcher/</guid><description>&lt;p>A few weeks ago I heard of SwiftBar, and &lt;a href="https://xbarapp.com/">Xbar&lt;/a>:&lt;/p>
&lt;p>| Put the output from any script or program into your macOS Menu Bar&lt;/p>
&lt;p>There&amp;rsquo;s a great library of plugins on the hub, covering all sorts of topics. Want to show the weather? Show upcoming info about your favourite sports team? Check if graphics cards are in stock? It can do all of this.&lt;/p>
&lt;p>What&amp;rsquo;s also great is the fact that you can see the source code of all the plugins. You can tweak those plugins and make them your own - and it&amp;rsquo;s interesting to understand how people solved these kinds of problems.&lt;/p>
&lt;h1 id="playing-with-plugins-">Playing with plugins 😳&lt;/h1>
&lt;p>I installed a few plugins, said &amp;ldquo;wow&amp;rdquo;, and quickly realised that the Mac Pro&amp;rsquo;s camera notch is a bit annoying - you lose a fair bit of real estate for tools like this! I used &lt;a href="https://github.com/Mortennn/Dozer">Dozer&lt;/a> / &lt;a href="https://github.com/dwarvesf/hidden">Hidden&lt;/a> to get rid of a few non-essential plugins, but they take a couple icons themselves so it didn&amp;rsquo;t help much.&lt;/p>
&lt;p>This taught me that I should be as lean as possible with how many characters I display with any plugin I write. Lots of plugins stick to emojis and numbers - I agree 💯%&lt;/p>
&lt;h1 id="how-an-xbar-plugin-works">How an xbar plugin works&lt;/h1>
&lt;p>The &lt;a href="https://github.com/matryer/xbar-plugins/blob/main/CONTRIBUTING.md">docs&lt;/a> for xbar are pretty good. There&amp;rsquo;s really two parts to a plugin: getting your data, and making xbar display it.&lt;/p>
&lt;p>To show your data, you just echo/println it. How the display is structured (icon, click-on-icon-modal, etc.) is like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e"># Cycle through &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;cycle-one&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;cycle-two&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;cycle-three&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;---&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Next lines only visible in dropdown for this plugin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;dropdown-item1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;dropdown-item2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;--dropdown-item2-something&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;----dropdown-item2-something-yodawg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;--dropdown-item2-somethingElse&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Next item is also in dropdown, separated by horizontal bar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;---&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;dropdown-item3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="xbar_tree.jpg" width="100%"/>
&lt;/figure>
&lt;p>I think that&amp;rsquo;s far more nesting that I&amp;rsquo;d ever want to use - but it&amp;rsquo;s nice that it&amp;rsquo;s there if you want it. I guess somebody did!&lt;/p>
&lt;p>Anyway, you can put links/colours/shortcuts in there and make it clickable. You can do other stuff like have the user enter variables (&amp;lt;xbar.var&amp;gt;) for the program to access as environment variables (it can&amp;rsquo;t access your actual environment variables).&lt;/p>
&lt;p>Another key feature is deciding how often your plugin updates. The plugin filenames should have a format of {name}.{time}.{ext}, e.g. check_weather.15m.sh.&lt;/p>
&lt;h1 id="writing-an-xbar-plugin">Writing an xbar plugin&lt;/h1>
&lt;p>Lots of teams use Github PRs. xbar seemed like the perfect tool for me to monitor PRs. I&amp;rsquo;ve tried a few systems for monitoring PRs, but I&amp;rsquo;m not a fan of any of them:&lt;/p>
&lt;ul>
&lt;li>I don&amp;rsquo;t like &lt;em>email&lt;/em> spam (one more app/tab, multitasking)&lt;/li>
&lt;li>&lt;em>Chatbots&lt;/em> are either slow (quickly oudated) or spammy&lt;/li>
&lt;li>&lt;em>Manually checking the site&lt;/em> either needs a few page loads or a bookmark - either way, it&amp;rsquo;s not the smoothest experience&amp;hellip; but the problem for me is it doesn&amp;rsquo;t say in advance if there will be any information for you to act on&lt;/li>
&lt;/ul>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;p>I figured an xbar plugin would let me:&lt;/p>
&lt;ul>
&lt;li>know if I can to merge (required approval count is met, CI checks pass)&lt;/li>
&lt;li>know if I have any comments/suggestions to address&lt;/li>
&lt;li>get a count of how many PRs other people have open&lt;/li>
&lt;li>get a count of how many PRs other people need reviews on&lt;/li>
&lt;li>see if PR checks pass/fail&lt;/li>
&lt;li>do this over multiple repositories&lt;/li>
&lt;/ul>
&lt;p>Your ideology on PRs probably makes you question these goals&amp;hellip; but you can tweak plugins, and you can tweak them to match your ideologies.&lt;/p>
&lt;h1 id="writing-this-plugin-with-bash">Writing this plugin with bash&lt;/h1>
&lt;p>The Github CLI is quite powerful - it can handle a lot of complexity with a clean API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">username&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">$&amp;#34;james&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">repo&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">$&amp;#34;ourOrg/ourBigRepo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">all_prs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">$(&lt;/span>gh pr list --repo &lt;span style="color:#111">$repo&lt;/span>&lt;span style="color:#00a8c8">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">$all_prs&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">my_prs&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#00a8c8">$(&lt;/span>gh pr list --repo WeaponX/ourBigRepo --author &lt;span style="color:#111">$username&lt;/span>&lt;span style="color:#00a8c8">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">echo&lt;/span> &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">$my_prs&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># TODO take to browser with --web&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There&amp;rsquo;s a lot of &lt;a href="https://cli.github.com/manual/gh_pr_list">options/args&lt;/a> you can use, and other handy commands like &lt;a href="https://cli.github.com/manual/gh_pr_status">gh pr status&lt;/a>. The CLI can natively output to json or use jq filters.&lt;/p>
&lt;p>I had a think about how I&amp;rsquo;d use this to tick off those goals, but for me it seemed easier to use a language I&amp;rsquo;m more familar with.&lt;/p>
&lt;ul>
&lt;li>node.js
&lt;ul>
&lt;li>
&lt;ul>
&lt;li>I get higher order functions (map, filter, reduce, etc.) which can help me focus on what I want, not how to do it&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;ul>
&lt;li>might need a global npm install of axios for making requests&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;del>- need to figure out how to run a node file as a bash-like file ()&lt;/del>
&lt;ul>
&lt;li>that only took a second to find out and verify - &lt;a href="https://stackoverflow.com/a/24183402/4261132">it&amp;rsquo;s pretty much what you&amp;rsquo;d expect&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>scala
&lt;ul>
&lt;li>it&amp;rsquo;s the language I work with, so it&amp;rsquo;d be good to practice more&lt;/li>
&lt;li>&lt;a href="https://scala-cli.virtuslab.org/docs/guides/scripts#self-executable-scala-script">scala-cli&lt;/a> can let you write self-executable scala scripts
&lt;ul>
&lt;li>I was curious how the experience would be, so I went with this&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Of course, sticking with bash would be nice. The Github CLI could be used for simplicity, which some users may already have - or curl could be used for even fewer dependencies. I encourage anyone who finds that challenge interesting to give it a try!&lt;/p>
&lt;h1 id="writing-this-plugin-with-bash-scala">Writing this plugin with &lt;del>bash&lt;/del> Scala&lt;/h1>
&lt;p>The first question is: Node has Axios, Python has Requests&amp;hellip; but what&amp;rsquo;s nice and simple for Scala? Enter Li Haoyi&amp;rsquo;s &lt;a href="https://github.com/com-lihaoyi/requests-scala">requests-scala&lt;/a>. Let&amp;rsquo;s install &lt;a href="https://scala-cli.virtuslab.org/install">scala-cli&lt;/a> and have a try:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env -S scala-cli shebang
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>import &lt;span style="color:#111">$ivy&lt;/span>.&lt;span style="color:#d88200">`&lt;/span>com.lihaoyi::requests:0.7.1&lt;span style="color:#d88200">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import &lt;span style="color:#111">$ivy&lt;/span>.&lt;span style="color:#d88200">`&lt;/span>com.lihaoyi::ujson:2.0.0&lt;span style="color:#d88200">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>val &lt;span style="color:#111">resp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> requests.get&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;https://api.github.com/users/lihaoyi&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>val &lt;span style="color:#111">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> ujson.read&lt;span style="color:#f92672">(&lt;/span>resp.text&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>println&lt;span style="color:#f92672">(&lt;/span>data&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;login&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#75715e"># username&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s close, it just needs a little tweak to the suggested shebang: for my MacOs brew install, &lt;code>#!/usr/bin/env /opt/homebrew/bin/scala-cli&lt;/code> works. Scala-cli is pulling in those Ivy dependencies and using them, very nice.&lt;/p>
&lt;p>To keep the blog short, you can what I&amp;rsquo;ve got so far here: &lt;a href="https://github.com/IdiosApps/xbar-github-pr">xbar-github-pr&lt;/a>. At this time it just shows PR counts summed over multiple repositories for your PRs and others'.&lt;/p>
&lt;p>TODO - add a screenshot&amp;hellip; or maybe in the goals section to get interest earlier?&lt;/p>
&lt;p>For now it&amp;rsquo;s basic but it&amp;rsquo;s a useful gauge/reminder. It can definitely be more useful, and meet more of the &lt;a href="#goals">goals&lt;/a> we set up. At some point I&amp;rsquo;ll extend on it, make it more idiomatic, and clean it up. It&amp;rsquo;s pretty much a dirty POC at the time of writing, but nevertheless I wanted to share it.&lt;/p>
&lt;p>Also note it was written for Github Enterprise, so might need a few small tweaks to work for public repos (mostly around the URLs used). Be respectful your scripts&amp;rsquo; frequency (remember, it&amp;rsquo;s in the filename, e.g. &lt;code>github-pr-checker.1h.sc&lt;/code>)&lt;/p>
&lt;p>Writing scripts with Scala-cli was generally pleasant, and I will likely reach for it again when solving similar problems - however I couldn&amp;rsquo;t figure out how to have a great user experience. There are &lt;a href="https://scala-cli.virtuslab.org/docs/commands/setup-ide/">IDE setup docs for scala-cli&lt;/a>, which could have helped improve highlighting or autocompletion. They do acknowledge &lt;a href="https://scala-cli.virtuslab.org/docs/guides/ide/">IDE user experience could be better&lt;/a>.&lt;/p>
&lt;h1 id="but-im-on-windows--linux">But I&amp;rsquo;m on Windows / Linux&lt;/h1>
&lt;p>todo: have a look for alternatives that use plugins and thus could use this stuff too&lt;/p></description></item><item><title>Navigating multiple projects with IntelliJ &amp; MacOS</title><status>evergreen</status><link>https://idiosapps.github.io/garden/intellij-project-tabs/</link><pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate><guid>https://idiosapps.github.io/garden/intellij-project-tabs/</guid><description>&lt;p>Microservices are pretty common nowadays, and often services gets their own repo. That has pros and cons, but one of the biggest cons you see day-to-day is that navigating multiple projects in IntelliJ &lt;del>isn&amp;rsquo;t&lt;/del> wasn&amp;rsquo;t a great experience.&lt;/p>
&lt;ul>
&lt;li>Do you switch between projects/folders in &lt;strong>IntelliJ&lt;/strong>?&lt;/li>
&lt;li>Do you hate janky, slow UI reloads when switching projects?&lt;/li>
&lt;li>Are you on &lt;strong>MacOS&lt;/strong>, and are on (or can get to) Big Sur or later?&lt;/li>
&lt;/ul>
&lt;p>If you answered yes to all of these questions, this post will interest you. Your IntelliJ can look like this:&lt;/p>
&lt;figure>&lt;img src="intellij_project_tabs.jpg" width="100%"/>
&lt;/figure>
&lt;p>You can even close/re-order tabs 😍&lt;/p>
&lt;h1 id="how-do-i-get-this-setup">How do I get this setup?&lt;/h1>
&lt;p>According to JetBrains, &lt;a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360010142139/comments/360002541180">this is a Big Sur only IntelliJ feature&lt;/a>. I guess it should also work on other JetBrains products, like WebStorm or PyCharm.&lt;/p>
&lt;ul>
&lt;li>Go to IntelliJ&amp;rsquo;s preferences&lt;/li>
&lt;li>Go to Appearance &amp;amp; behaviour, then System Settings&lt;/li>
&lt;li>Choose &amp;ldquo;New window&amp;rdquo; or &amp;ldquo;Ask&amp;rdquo; (it&amp;rsquo;s counter intuitive, I know!)
&lt;ul>
&lt;li>If you choose &amp;ldquo;Ask&amp;rdquo; and want a project to appear as a tab, choose &amp;ldquo;New window&amp;rdquo; in the popup dialogue when you open a project&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="intellij_preferences.jpg" width="100%"/>
&lt;/figure>
&lt;ul>
&lt;li>Go to MacOS System Settings&lt;/li>
&lt;li>Go to General&lt;/li>
&lt;li>Choose &amp;ldquo;always&amp;rdquo; for Prefer tabs&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="macos_general_settings.jpg" width="100%"/>
&lt;/figure>
&lt;h1 id="closing-notes">Closing notes&lt;/h1>
&lt;ul>
&lt;li>Thanks to a few Stack Overflow posts/answers/comments &lt;a href="https://stackoverflow.com/a/65451682/4261132">1&lt;/a>, &lt;a href="https://stackoverflow.com/a/69350085/4261132">2&lt;/a>, &lt;a href="https://stackoverflow.com/a/71495096/4261132">3&lt;/a>. They helped clarify how the confusing setup should be done.&lt;/li>
&lt;li>Don&amp;rsquo;t question why my default browser is Microsoft Edge&lt;/li>
&lt;/ul></description></item><item><title>Games for work socials</title><status>growing</status><link>https://idiosapps.github.io/garden/games-for-socials/</link><pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate><guid>https://idiosapps.github.io/garden/games-for-socials/</guid><description>&lt;p>Ever since COVID became a thing in our daily lives, remote work has become more prevalent. Whilst there&amp;rsquo;s a huge amount to gain from remote working, we do lose those colloquial chats by the water cooler or board/card games in lunch breaks.&lt;/p>
&lt;p>In my experience, it&amp;rsquo;s common for companies to offer a 1-2 hour social meeting on Fridays - maybe just to chat, or with a game at the forefront.&lt;/p>
&lt;p>It&amp;rsquo;s been a few years now since COVID started, and we&amp;rsquo;ve all tried lots of games. Here&amp;rsquo;s a list of games you should try, and what I think about them.&lt;/p>
&lt;h1 id="free">Free&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Game&lt;/th>
&lt;th>Rating / 5 stars&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://tagpro.koalabeast.com/">TagPro&lt;/a>&lt;/td>
&lt;td>5&lt;/td>
&lt;td>Gameplay will be 90% of the focus of your social. Great fun - be sure to make an account and change your name so you can get more teamwork going on!&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.drawasaurus.org/">Drawasaurus&lt;/a>&lt;/td>
&lt;td>4&lt;/td>
&lt;td>You&amp;rsquo;re either drawing or typing in a thoughtful frenzy to guess what one player&amp;rsquo;s drawing is. I like how this game keeps everyone involved, and is leninet on spelling mistakes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://codenames.game/">Codenames&lt;/a>&lt;/td>
&lt;td>4&lt;/td>
&lt;td>The classic word-game Codenames - be sure to set a timer so people don&amp;rsquo;t take 7 minutes to find the perfect clues (which may not even work!)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://globle-game.com/">Globle&lt;/a>&lt;/td>
&lt;td>4&lt;/td>
&lt;td>Guess where a mystery country is!&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.teambridge.app/">TeamBridge.app&lt;/a>&lt;/td>
&lt;td>3.5&lt;/td>
&lt;td>There&amp;rsquo;s 6 free games, but they&amp;rsquo;re pretty quiet. For example, Cosel (&amp;ldquo;broken telephone&amp;rdquo;) has e.g. 10 people drawing and describing plenty of images, which takes a lot of focus; the fun comes when the whole group sees how words evolved. But it&amp;rsquo;s cute and there&amp;rsquo;s variety, so give it a try one week!&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://gjeuken.github.io/telewave/">Wavelength&lt;/a>&lt;/td>
&lt;td>2.5&lt;/td>
&lt;td>An ingenius digital board for the game &amp;ldquo;Wavelength&amp;rdquo; - be sure to read the instructions. I find it so difficult to think of a word on the spot such that this game isn&amp;rsquo;t really fun to me - but discussing and guessing other people&amp;rsquo;s words is OK&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://quackstanley.net/">QuackStanley&lt;/a>&lt;/td>
&lt;td>?&lt;/td>
&lt;td>Much like Snakeoil, a “buyer” is offered goods from each other player in turn (based on a choice of 2 of 4 topics). Weird and creative, and super fast to pick up&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.hanab.cards/">Hanab&lt;/a>&lt;/td>
&lt;td>?&lt;/td>
&lt;td>A cooperative game where a team of pyrotechnics give each other information to build 5 fireworks&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://categories-with-friends.herokuapp.com/">Categories with Friends/Scattergories&lt;/a>&lt;/td>
&lt;td>?&lt;/td>
&lt;td>Each player writes a word with each category, getting double points if it matches the round&amp;rsquo;s special letter. Think someone has made something up? A quick vote will settle it!&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="paid">Paid&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Game&lt;/th>
&lt;th>Rating / 5 stars&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://www.jackboxgames.com/">Jackbox Games&lt;/a>&lt;/td>
&lt;td>3&lt;/td>
&lt;td>There’s a number of releases, each with their own mix of &lt;a href="https://www.jackboxgames.com/games/">hit-or-miss games&lt;/a>. Fibbage, Quiplash, and Drawful Animate are my favourites (2 of these are in the &lt;a href="https://www.jackboxgames.com/party-pack-two/">second party pack&lt;/a>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Among Us &lt;a href="https://store.steampowered.com/app/945360/Among_Us/">PC (paid)&lt;/a> / &lt;a href="https://play.google.com/store/apps/details?id=com.innersloth.spacemafia&amp;amp;hl=en_GB&amp;amp;gl=US">Play Store&lt;/a> / &lt;a href="https://apps.apple.com/us/app/among-us/id1351168404">App Store&lt;/a>&lt;/td>
&lt;td>?&lt;/td>
&lt;td>People were genuinely playing this every day at work during the height of its popularity. I didn&amp;rsquo;t really &lt;em>&amp;ldquo;get&amp;rdquo;&lt;/em> it, but I&amp;rsquo;ve seen that it&amp;rsquo;s a fantastic social game&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://colonist.io/">Catan&lt;/a>&lt;/td>
&lt;td>?&lt;/td>
&lt;td>There&amp;rsquo;s a nice UI and maybe more expansions than with BoardGameArena (?), so if you keep playing Catan this might be a good choice.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://boardgamearena.com/gamelist">BoardGameArena&lt;/a>&lt;/td>
&lt;td>?&lt;/td>
&lt;td>Play games like Catan, Azul, Wingspan, Ticket to Ride, Sushi Go - but one member needs a premium subscription (£27/year, or £5/month)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>How PDFs make your headphones sound better 🎧</title><status>growing</status><link>https://idiosapps.github.io/garden/equalisers-and-pdfs/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://idiosapps.github.io/garden/equalisers-and-pdfs/</guid><description>&lt;p>This blog post will be a mishmash of audio equalisers and PDF text extraction.&lt;/p>
&lt;p>Equalisers (EQ) let you adjust your audio to your liking. They can help all headphones try to achieve a common sound, such as the Harman Curve. There&amp;rsquo;s loads you can read around the topic, but to keep things practical you could just give it a try and see if things &amp;ldquo;sound better&amp;rdquo;.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>The user &amp;ldquo;Oratory1990&amp;rdquo; has &lt;a href="https://www.reddit.com/r/oratory1990/wiki/index/list_of_presets/">measured a huge number of headphones&lt;/a> and has given equaliser settings you can try out. In the case of used Beyerdynamic DT 770 Pros, EQ will take their &amp;ldquo;preference rating&amp;rdquo; from 79% to 100% - basically, statistically speaking, people will like them more with EQ.&lt;/p>
&lt;p>Recently the measurements and fine-tunings were adjusted for my headphones, so off I went to figure out how to use the new configuration&amp;hellip;&lt;/p>
&lt;h1 id="creating-a-parametric-eq-for-peace--equaliser-apo">Creating a parametric EQ for Peace / Equaliser APO&lt;/h1>
&lt;p>In my case, I want to use the new config for Sennheiser HD 660s - see &lt;a href="https://www.dropbox.com/s/s4isno09gt20ozf/Sennheiser%20HD660S.pdf?dl=0">this dropbox pdf&lt;/a>:&lt;/p>
&lt;figure>&lt;img src="filter_settings.png" width="100%"/>
&lt;/figure>
&lt;p>To make this config simply and correctly, we can use an exisiting parametric EQ text file from &lt;a href="https://github.com/jaakkopasanen/AutoEq/blob/master/results/oratory1990/harman_over-ear_2018/Sennheiser%20HD%20660%20S/Sennheiser%20HD%20660%20S%20ParametricEQ.txt">AutoEq&lt;/a>. You can see the number of filters, where the peak of each filter is centred (30Hz), how loudness changes around that frequency (6.5 dB) and the strength of the curve (Q 0.37) - as well as the shape of the curve (PK):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Preamp: -7.0 dB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 1: ON PK Fc &lt;span style="color:#ae81ff">30&lt;/span> Hz Gain 6.5 dB Q 0.37
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 2: ON PK Fc &lt;span style="color:#ae81ff">181&lt;/span> Hz Gain -3.8 dB Q 0.54
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 3: ON PK Fc &lt;span style="color:#ae81ff">1351&lt;/span> Hz Gain -3.3 dB Q 1.33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can see that &amp;ldquo;PEAK&amp;rdquo; is abbreviated to &amp;ldquo;PK&amp;rdquo; - so we can guess that the low &amp;amp; high shelves from the diagram will be LS &amp;amp; HS respectively. Copying the preamp gain over and adjusting the numbers gets us:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Preamp: -8.4 dB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 1: ON PK Fc &lt;span style="color:#ae81ff">34&lt;/span> Hz Gain 3.0 dB Q 1.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 2: ON LS Fc &lt;span style="color:#ae81ff">100&lt;/span> Hz Gain 5.5 dB Q 0.71
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 3: ON PK Fc &lt;span style="color:#ae81ff">200&lt;/span> Hz Gain -2.5 dB Q 0.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 4: ON PK Fc &lt;span style="color:#ae81ff">1330&lt;/span> Hz Gain -2.5 dB Q 1.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 5: ON HS Fc &lt;span style="color:#ae81ff">1700&lt;/span> Hz Gain 4.0 dB Q 0.71
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 6: ON PK Fc &lt;span style="color:#ae81ff">3300&lt;/span> Hz Gain -2.1 dB Q 1.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 7: ON PK Fc &lt;span style="color:#ae81ff">5520&lt;/span> Hz Gain -6.4 dB Q 3.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 8: ON PK Fc &lt;span style="color:#ae81ff">8000&lt;/span> Hz Gain 3.0 dB Q 1.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 9: ON HS Fc &lt;span style="color:#ae81ff">10000&lt;/span> Hz Gain -2.0 dB Q 0.71
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter 10: OFF
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I use Peace for Windows, so I need to import the config this way:&lt;/p>
&lt;figure>&lt;img src="peace_import.png" width="100%"/>
&lt;/figure>
&lt;p>&amp;hellip; and don&amp;rsquo;t forget to save the config (feel free to choose your favourite colour icon!):&lt;/p>
&lt;figure>&lt;img src="peace_save.png" width="80%"/>
&lt;/figure>
&lt;p>we should see that the profile is active in Peace, and in the taskbar:&lt;/p>
&lt;figure>&lt;img src="peace_taskbar.png" width="30%"/>
&lt;/figure>
&lt;h1 id="are-there-lazier-ways-to-get-good-eq-from-these-numbers">Are there lazier ways to get good EQ from these numbers?&lt;/h1>
&lt;p>Yep, like mentioned above there’s &lt;a href="https://github.com/jaakkopasanen/AutoEq">AutoEQ&lt;/a>. The readme is good, so you can just follow that if you want more info on how to use it.&lt;/p>
&lt;p>How does AutoEQ generate the EQ files?&lt;/p>
&lt;p>There is a crawler python script, which:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jaakkopasanen/AutoEq/blob/master/measurements/oratory1990/oratory1990_crawler.py#L47">scans a reddit wiki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jaakkopasanen/AutoEq/blob/master/measurements/oratory1990/oratory1990_crawler.py#L156">renders PDFs into images&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jaakkopasanen/AutoEq/blob/master/measurements/oratory1990/oratory1990_crawler.py#L81">parses the frequency graph into response curve data&lt;/a> by &lt;a href="https://github.com/jaakkopasanen/AutoEq/blob/master/measurements/oratory1990/oratory1990_crawler.py#L128">reading the coloured data points&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>As you might guess, it uses some PDF libraries, and even checks the text in the image. Instead of getting the table of data, it uses the graph to generate data. The nice thing about this is that you can independently work out graphical/parametric EQs to reach different target audio curves.&lt;/p>
&lt;h1 id="how-about-automatically-reading-the-text-from-the-tables">How about automatically reading the text from the tables?&lt;/h1>
&lt;p>I’m going to tell you a bit about how data is expressed in PDFs, and how we can explore PDFs to find out how we can extract useful data. You can follow along on your own PC and see what&amp;rsquo;s going on with PDFs if you like.&lt;/p>
&lt;p>Let’s see how information is expressed in PDFs:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.reddit.com/r/oratory1990/wiki/index/list_of_presets/">Get a PDF to examine&lt;/a>
&lt;ul>
&lt;li>e.g. &lt;a href="https://www.dropbox.com/s/90dggt4jel4jjgc/1More%201M301%20Single%20Driver.pdf?dl=0">1More earphones&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://pdfbox.apache.org/download.html">get the latest PDFBox debugger&lt;/a>
&lt;ul>
&lt;li>install Java if you don&amp;rsquo;t have it&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>run &lt;code>java -jar debugger.jar&lt;/code>&lt;/li>
&lt;li>Open the PDF file in the debugger that pops up. It will look like:&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="pdf_debugger.png" width="100%"/>
&lt;/figure>
&lt;p>If we view the contents of the file, we can view either the plaintext or encoded data stream. There’s a bunch of &lt;strong>Stuff&lt;/strong>, but let’s look for BT (Begin Text) / ET (End Text) and see what we can read.&lt;/p>
&lt;figure>&lt;img src="pdf_decoded_text.png" width="100%"/>
&lt;/figure>
&lt;p>&lt;code>(m) 33 (e) -44 (a) -44 (su) -44 (r) 33 (e) -44 (d) -44 ( ) -22 (o) -44 (n)&lt;/code> - &amp;ldquo;measured on&amp;rdquo; - that text does indeed appear in the document. What&amp;rsquo;s with all the numbers, and having the letters in brackets? The numbers are the codepoints of glyphs+unicodes in fonts embedded in the PDF - you can see stuff like this in the font resources:&lt;/p>
&lt;figure>&lt;img src="pdf_code_glyph_unicode.png" width="100%"/>
&lt;/figure>
&lt;p>Note that whilst the letters for &amp;ldquo;measured on&amp;rdquo; were at the top of the decoded stream, that doesn&amp;rsquo;t imply where the text will be on the document. The location is defined by coordinates, like 33.06, 44.38977.&lt;/p>
&lt;p>Given that I can search the PDF in a PDF viewer for “measured on” and find it, and that I can also the “Band 1” and find it - I’m pretty confident the text is expressed “plainly” in the plain text (as something like 2(b) 1(a)&amp;hellip;).&lt;/p>
&lt;p>There’s 225 “BT”s in the document. I had a flick through all of them and didn’t see something that was obviously our data. BW is the most unique short phrase in the document - can we find that? Searching for (W) gives no results. How can searches with a commercial PDF viewer find results for W? As I write this, I&amp;rsquo;m not so sure.&lt;/p>
&lt;p>We can take a step back and try some higher-level tools to keep things simple. PDFbox comes with a CLI - we can try a few commands:&lt;/p>
&lt;ul>
&lt;li>&lt;code>java -jar .\pdfbox-app-3.0.0-alpha3.jar&lt;/code> - shows us there&amp;rsquo;s an &amp;ldquo;export:text&amp;rdquo; option&lt;/li>
&lt;li>&lt;code>java -jar .\pdfbox-app-3.0.0-alpha3.jar export:text --input=pdf.pdf&lt;/code> - gives us some interesting plain-text output:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter Type Frequency Gain Q-Factor BW
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Band &lt;span style="color:#ae81ff">1&lt;/span> PEAK &lt;span style="color:#ae81ff">80&lt;/span> Hz -9,6 dB 0,4 3,02 Adjust gain of band &lt;span style="color:#ae81ff">2&lt;/span> to preference &lt;span style="color:#f92672">(&lt;/span>bass&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Band &lt;span style="color:#ae81ff">2&lt;/span> LOW_SHELF &lt;span style="color:#ae81ff">110&lt;/span> Hz 10,0 dB 0,71 1,89 Deviation from Target Adjust gain of band &lt;span style="color:#ae81ff">7&lt;/span> to preference &lt;span style="color:#f92672">(&lt;/span>airiness&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Band &lt;span style="color:#ae81ff">3&lt;/span> PEAK &lt;span style="color:#ae81ff">300&lt;/span> Hz -2,5 dB 1,0 1,39 Before EQ After EQ
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Band &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Preamp gain:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-9,0 dB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="1more_table.png" width="100%"/>
&lt;/figure>
&lt;p>It looks like we’ve got everthing we’d want! And look at that preference rating jump: 58 to 95. Those earphones will sound twice as good with this EQ 😉&lt;/p>
&lt;p>If you’re interested in extracting this information and playing with how PDFs work, I recommend you to have a deeper look with some of these tools. It looks like you could get something working quickly with PyPDF2, to extract this text and transform it into an EQ that Peace could use. No measuring of graphs and generating of configuration needed - you can just extract the provided configuration.&lt;/p>
&lt;h1 id="personalising-eq">Personalising EQ&lt;/h1>
&lt;p>We mentioned Harman curves, preference ratings, EQs and stuff - but every human is different, right? Generally, the Harman target will sound good to lots of people - but some people love bass, and some people hate sibilance. A good EQ can be tweaked to personal preference.&lt;/p>
&lt;p>Here&amp;rsquo;s some notes from Oratory, then we can do a little experiment:&lt;/p>
&lt;figure>&lt;img src="oratory_band_preference.png" width="100%"/>
&lt;/figure>
&lt;hr>
&lt;figure>&lt;img src="oratory_db_tweaks.png" width="100%"/>
&lt;/figure>
&lt;h2 id="sibilance---electric-drum-machine">Sibilance - electric drum machine&lt;/h2>
&lt;p>I listened to &amp;ldquo;Paper Love&amp;rdquo; by Allie X, and the hi-hat(?) on the electric drum machine was a little too loud for me - we can make it less of a focus if we want to.&lt;/p>
&lt;p>To figure out where the sounds we want to change mostly lie, we can try making everything else quiet:&lt;/p>
&lt;figure>&lt;img src="eq_isolate.png" width="50%"/>
&lt;/figure>
&lt;p>Tweaking the dials further, I figured out that -3dB at 8k and 10k was good for me. Vocals might be a &lt;em>tiny&lt;/em> bit squashed, but the song was much easier to listen to. Optimising for listening time can be a fair goal.&lt;/p>
&lt;p>I saved this config as &amp;ldquo;660s_oratory_2022-07-15_relaxed_his&amp;rdquo;, and with a different colour icon.&lt;/p>
&lt;p>If you can&amp;rsquo;t hear any change from moving the dials/pre-amp, you might need to restart your PC or check your Equaliser APO installation.&lt;/p>
&lt;h2 id="more-basssub-bass">More bass/sub-bass&lt;/h2>
&lt;p>This time we can try a different song. Choose whatever you like, or &amp;ldquo;Regulars&amp;rdquo; by Allie X (I do listen to other stuff, but was going through all the albums that day!). Try setting everything down and raise the sub-bass frequency:&lt;/p>
&lt;figure>&lt;img src="eq_only_subbass.png" width="50%"/>
&lt;/figure>
&lt;p>With too much of this, there&amp;rsquo;s mostly a kick drum(?) and muffled voices. Turn everything back else to the EQ you want and then turn the lowest frequency down - it feels a bit like you&amp;rsquo;ve lost the &amp;ldquo;body&amp;rdquo;/substance of the song.&lt;/p>
&lt;p>I&amp;rsquo;m sticking with the default provided by the EQ.&lt;/p>
&lt;h2 id="bass">Bass&lt;/h2>
&lt;p>I tried similar for 100 Hz, so probably &amp;ldquo;bass&amp;rdquo; frequencies. If I took it too high, other sounds seemed to get really quiet. I&amp;rsquo;m using a decent DAC (Schiit Modi) and amp (DIY O2), so I&amp;rsquo;m not sure what&amp;rsquo;s going on. But I&amp;rsquo;m OK with Oratory&amp;rsquo;s default, it&amp;rsquo;s got enough bass for me.&lt;/p>
&lt;p>Again, I&amp;rsquo;m sticking with the default provided by the EQ.&lt;/p>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>We&amp;rsquo;re all different. Audio is down to preference. You might like EQ, you might not. Why not give it a try? It&amp;rsquo;s free and could add even more enjoyment to your music listening.&lt;/p>
&lt;h1 id="extra-notes">Extra notes&lt;/h1>
&lt;p>Here&amp;rsquo;s an interesting aside: sometimes PDFs are very weird about how they show text. I’ve seen what looks like totally normal documents, but on further inspection they have no actual letters in. They just have a bunch of lines and curves that looked like letters. Documents like this have to be rendered to an image and OCR’d to extract the text!
The heuristic for figuring out whether to do that is fairly simple (but expensive, so don&amp;rsquo;t do it by default): look for a ridiculous number of lines/curves, or like 99% of the PDF operations being line/curve draws.&lt;/p>
&lt;p>Here’s an example of line draws and curves in one of the docs we looked at today:&lt;/p>
&lt;figure>&lt;img src="pdf_lines_curves.png" width="100%"/>
&lt;/figure>
&lt;p>If you want to read more about PDFs, &lt;a href="https://opensource.adobe.com/dc-acrobat-sdk-docs/standards/pdfstandards/pdf/PDF32000_2008.pdf">this 2008 PDF .7 spec by Adobe&lt;/a> was the top Google result. It&amp;rsquo;s more than 750 pages long. I spent a lot of time reading that thing in my first Software job 😬&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The usage/installation guide at &lt;a href="https://github.com/jaakkopasanen/AutoEq#usage">AutoEq&lt;/a> is pretty good. The Peace GUI makes it super easy to download and use the AutoEq settings.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>